na = "NA",
)
# Write the data frame to a CSV file using a different delimiter (semicolon)
# Deze kwam eerst van het web maar zit nu in de folders voor een SELF CONTAINED PROJECT
# write.csv(data, file = "C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.csv", row.names = FALSE)
# writexl(data, file = "C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.csv", row.names = FALSE)
}
### EXPLORE DATA
{
# Samenvatting per kolom
{
summary(data)
}
# Unieke waarde van categoriale variabelen
{
unique(data$species)
unique(data$island)
unique(data$sex)
unique(data$year)
}
# Aantallen diverse doorsnedes
{
data %>% count(island,sort=TRUE)
data %>% count(species,sort=TRUE)
data %>% count(year)
data %>% count(species,year)
data %>% count(island,species,sort=TRUE)
data %>% count(species,island,sort=TRUE)
data %>% count(island,year,species)
}
# Gemiddelde
{
## 1/3 Functie gemiddelde berekenen
calc_mean_bill_Adelie_per_Island <- function(island_name) {
filtered_data <- subset(na.omit(data), species == "Adelie" & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
}
# Call the function for each island
calc_mean_bill_Adelie_per_Island("Torgersen")
calc_mean_bill_Adelie_per_Island("Biscoe")
calc_mean_bill_Adelie_per_Island("Dream")
## 2/3 Functie gemiddelde berekenen
calc_mean_bill_Gentoo_per_Island <- function(island_name) {
filtered_data <- subset(na.omit(data), species == "Gentoo" & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
}
# Call the function for each island
calc_mean_bill_Gentoo_per_Island("Torgersen")
calc_mean_bill_Gentoo_per_Island("Biscoe")
calc_mean_bill_Gentoo_per_Island("Dream")
## 3/3 Functie gemiddelde berekenen
calc_mean_bill_Chinstrap_per_Island <- function(island_name) {
filtered_data <- subset(na.omit(data), species == "Chinstrap" & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
}
# Call the function for each island
calc_mean_bill_Chinstrap_per_Island("Torgersen")
calc_mean_bill_Chinstrap_per_Island("Biscoe")
calc_mean_bill_Chinstrap_per_Island("Dream")
}
}
penguins_clean <- na.omit(data)
plot(penguins_clean$bill_length_mm, penguins_clean$bill_depth_mm, type = "n", xlab = "Bill Length (mm)", ylab = "Bill Depth (mm)", main = "Penguin Bill Dimensions")
# Daily work habit: Restart R very often and re-run your under-development script from the top.
# Restart R Ctrl+Shift+F10
# Re-run all code up to the current line with Ctrl+Alt+B
### LIBRARIES
{
library(tidyverse)
library(styler)
}
### LOAD DATA, LET OP col_types nav samenvatting
{
#Via CSV
#data <- read.csv("C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.csv",header = TRUE)
# Via XLSX
library(readxl)
data <- read_excel("C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.xlsx",
sheet = 1,
col_types = c(
"text",
"text",
"numeric",
"numeric",
"numeric",
"numeric",
"text",
"numeric"
),
na = "NA",
)
# Write the data frame to a CSV file using a different delimiter (semicolon)
# Deze kwam eerst van het web maar zit nu in de folders voor een SELF CONTAINED PROJECT
# write.csv(data, file = "C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.csv", row.names = FALSE)
# writexl(data, file = "C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.csv", row.names = FALSE)
}
### EXPLORE DATA
{
# Samenvatting per kolom
{
summary(data)
}
# Unieke waarde van categoriale variabelen
{
unique(data$species)
unique(data$island)
unique(data$sex)
unique(data$year)
}
# Aantallen diverse doorsnedes
{
data %>% count(island,sort=TRUE)
data %>% count(species,sort=TRUE)
data %>% count(year)
data %>% count(species,year)
data %>% count(island,species,sort=TRUE)
data %>% count(species,island,sort=TRUE)
data %>% count(island,year,species)
}
# Gemiddelde
{
## 1/3 Functie gemiddelde berekenen
calc_mean_bill_Adelie_per_Island <- function(island_name) {
filtered_data <- subset(na.omit(data), species == "Adelie" & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
}
# Call the function for each island
calc_mean_bill_Adelie_per_Island("Torgersen")
calc_mean_bill_Adelie_per_Island("Biscoe")
calc_mean_bill_Adelie_per_Island("Dream")
## 2/3 Functie gemiddelde berekenen
calc_mean_bill_Gentoo_per_Island <- function(island_name) {
filtered_data <- subset(na.omit(data), species == "Gentoo" & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
}
# Call the function for each island
calc_mean_bill_Gentoo_per_Island("Torgersen")
calc_mean_bill_Gentoo_per_Island("Biscoe")
calc_mean_bill_Gentoo_per_Island("Dream")
## 3/3 Functie gemiddelde berekenen
calc_mean_bill_Chinstrap_per_Island <- function(island_name) {
filtered_data <- subset(na.omit(data), species == "Chinstrap" & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
}
# Call the function for each island
calc_mean_bill_Chinstrap_per_Island("Torgersen")
calc_mean_bill_Chinstrap_per_Island("Biscoe")
calc_mean_bill_Chinstrap_per_Island("Dream")
}
}
### PLOT DATA
{
# Plot
penguins_clean <- na.omit(data)
plot(penguins_clean$bill_length_mm, penguins_clean$bill_depth_mm, type = "n", xlab = "Bill Length (mm)", ylab = "Bill Depth (mm)", main = "Penguin Bill Dimensions")
points(
penguins_clean$bill_length_mm[penguins_clean$species == "Adelie"], penguins_clean$bill_depth_mm[penguins_clean$species == "Adelie"],
col = "red", pch = 16
)
points(penguins_clean$bill_length_mm[penguins_clean$species == "Chinstrap"], penguins_clean$bill_depth_mm[penguins_clean$species == "Chinstrap"], col = "green", pch = 17)
points(penguins_clean$bill_length_mm[penguins_clean$species == "Gentoo"],
penguins_clean$bill_depth_mm[penguins_clean$species == "Gentoo"],
col = "blue", pch = 18
)
legend("topright",
legend = unique(penguins_clean$species),
col = c(
"red",
"green",
"blue"
), pch = c(16, 17, 18)
)
# plot function
create_scatterplot <- function(data, selected_species, selected_island) {
# Filter the data for the specified species and island
filtered_data <- data %>%
na.omit() %>%
filter(species == selected_species, island == selected_island)
# Create the scatterplot
plot <- ggplot(
filtered_data,
aes(x = bill_length_mm, y = bill_depth_mm, color = species, shape = species)
) +
geom_point() +
labs(
x = "Bill Length (mm)",
y = "Bill Depth (mm)",
title = paste("Penguin Bill Dimensions -", selected_species, "-", selected_island)
)
return(plot)
}
# Use the function
create_scatterplot(data, "Adelie", "Torgersen")
}
# Daily work habit: Restart R very often and re-run your under-development script from the top.
# Restart R Ctrl+Shift+F10
# Re-run all code up to the current line with Ctrl+Alt+B
### LIBRARIES
{
library(tidyverse)
library(styler)
}
### LOAD DATA, LET OP col_types nav samenvatting
{
#Via CSV
#data <- read.csv("C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.csv",header = TRUE)
# Via XLSX
library(readxl)
data <- read_excel("C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.xlsx",
sheet = 1,
col_types = c(
"text",
"text",
"numeric",
"numeric",
"numeric",
"numeric",
"text",
"numeric"
),
na = "NA",
)
# Write the data frame to a CSV file using a different delimiter (semicolon)
# Deze kwam eerst van het web maar zit nu in de folders voor een SELF CONTAINED PROJECT
# write.csv(data, file = "C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.csv", row.names = FALSE)
# writexl(data, file = "C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.csv", row.names = FALSE)
}
### EXPLORE DATA
{
# Samenvatting per kolom
{
summary(data)
}
# Unieke waarde van categoriale variabelen
{
unique(data$species)
unique(data$island)
unique(data$sex)
unique(data$year)
}
# Aantallen diverse doorsnedes
{
data %>% count(island,sort=TRUE)
data %>% count(species,sort=TRUE)
data %>% count(year)
data %>% count(species,year)
data %>% count(island,species,sort=TRUE)
data %>% count(species,island,sort=TRUE)
data %>% count(island,year,species)
}
# Gemiddelde
{
## 1/3 Functie gemiddelde berekenen
calc_mean_bill_Adelie_per_Island <- function(island_name) {
filtered_data <- subset(na.omit(data), species == "Adelie" & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
}
# Call the function for each island
calc_mean_bill_Adelie_per_Island("Torgersen")
calc_mean_bill_Adelie_per_Island("Biscoe")
calc_mean_bill_Adelie_per_Island("Dream")
## 2/3 Functie gemiddelde berekenen
calc_mean_bill_Gentoo_per_Island <- function(island_name) {
filtered_data <- subset(na.omit(data), species == "Gentoo" & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
}
# Call the function for each island
calc_mean_bill_Gentoo_per_Island("Torgersen")
calc_mean_bill_Gentoo_per_Island("Biscoe")
calc_mean_bill_Gentoo_per_Island("Dream")
## 3/3 Functie gemiddelde berekenen
calc_mean_bill_Chinstrap_per_Island <- function(island_name) {
filtered_data <- subset(na.omit(data), species == "Chinstrap" & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
}
# Call the function for each island
calc_mean_bill_Chinstrap_per_Island("Torgersen")
calc_mean_bill_Chinstrap_per_Island("Biscoe")
calc_mean_bill_Chinstrap_per_Island("Dream")
## 4 Functie gemiddelde berekenen
calc_mean_bill_species_Island <- function(species_name, island_name) {
filtered_data <- subset(na.omit(data), species == species_name & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
}
# Call the function for each island
calc_mean_bill_species_Island("Torgersen")
calc_mean_bill_species_Island("Biscoe")
calc_mean_bill_species_Island("Dream")
calc_mean_bill_species_Island <- function(species_name, island_name) {
filtered_data <- subset(na.omit(data), species == species_name & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
calc_mean_bill_species_Island <- function(species_name, island_name) {
filtered_data <- subset(na.omit(data), species == species_name & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
calc_mean_bill_species_Island("Torgersen")
# Daily work habit: Restart R very often and re-run your under-development script from the top.
# Restart R Ctrl+Shift+F10
# Re-run all code up to the current line with Ctrl+Alt+B
### LIBRARIES
{
library(tidyverse)
library(styler)
}
### LOAD DATA, LET OP col_types nav samenvatting
{
#Via CSV
#data <- read.csv("C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.csv",header = TRUE)
# Via XLSX
library(readxl)
data <- read_excel("C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.xlsx",
sheet = 1,
col_types = c(
"text",
"text",
"numeric",
"numeric",
"numeric",
"numeric",
"text",
"numeric"
),
na = "NA",
)
# Write the data frame to a CSV file using a different delimiter (semicolon)
# Deze kwam eerst van het web maar zit nu in de folders voor een SELF CONTAINED PROJECT
# write.csv(data, file = "C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.csv", row.names = FALSE)
# writexl(data, file = "C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.csv", row.names = FALSE)
}
### EXPLORE DATA
{
# Samenvatting per kolom
{
summary(data)
}
# Unieke waarde van categoriale variabelen
{
unique(data$species)
unique(data$island)
unique(data$sex)
unique(data$year)
}
# Aantallen diverse doorsnedes
{
data %>% count(island,sort=TRUE)
data %>% count(species,sort=TRUE)
data %>% count(year)
data %>% count(species,year)
data %>% count(island,species,sort=TRUE)
data %>% count(species,island,sort=TRUE)
data %>% count(island,year,species)
}
# Gemiddelde
{
## 1/3 Functie gemiddelde berekenen
calc_mean_bill_Adelie_per_Island <- function(island_name) {
filtered_data <- subset(na.omit(data), species == "Adelie" & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
}
# Call the function for each island
calc_mean_bill_Adelie_per_Island("Torgersen")
calc_mean_bill_Adelie_per_Island("Biscoe")
calc_mean_bill_Adelie_per_Island("Dream")
## 2/3 Functie gemiddelde berekenen
calc_mean_bill_Gentoo_per_Island <- function(island_name) {
filtered_data <- subset(na.omit(data), species == "Gentoo" & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
}
# Call the function for each island
calc_mean_bill_Gentoo_per_Island("Torgersen")
calc_mean_bill_Gentoo_per_Island("Biscoe")
calc_mean_bill_Gentoo_per_Island("Dream")
## 3/3 Functie gemiddelde berekenen
calc_mean_bill_Chinstrap_per_Island <- function(island_name) {
filtered_data <- subset(na.omit(data), species == "Chinstrap" & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
}
# Call the function for each island
calc_mean_bill_Chinstrap_per_Island("Torgersen")
calc_mean_bill_Chinstrap_per_Island("Biscoe")
calc_mean_bill_Chinstrap_per_Island("Dream")
## 4 Functie gemiddelde berekenen
calc_mean_bill_species_Island <- function(species_name, island_name) {
filtered_data <- subset(na.omit(data), species == species_name & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
}
# Call the function for each island
calc_mean_bill_species_Island("Torgersen")
calc_mean_bill_species_Island("Biscoe")
calc_mean_bill_species_Island("Dream")
}
calc_mean_bill_Adelie_per_Island <- function(island_name) {
filtered_data <- subset(na.omit(data), species == "Adelie" & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
data %>% count(island,sort=TRUE)
data %>% count(species,sort=TRUE)
data %>% count(year)
data %>% count(species,year)
data %>% count(island,species,sort=TRUE)
data %>% count(species,island,sort=TRUE)
data %>% count(island,year,species)
}
summary(data)
# Daily work habit: Restart R very often and re-run your under-development script from the top.
# Restart R Ctrl+Shift+F10
# Re-run all code up to the current line with Ctrl+Alt+B
### LIBRARIES
{
library(tidyverse)
library(styler)
}
### LOAD DATA, LET OP col_types nav samenvatting
{
#Via CSV
#data <- read.csv("C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.csv",header = TRUE)
# Via XLSX
library(readxl)
data <- read_excel("C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.xlsx",
sheet = 1,
col_types = c(
"text",
"text",
"numeric",
"numeric",
"numeric",
"numeric",
"text",
"numeric"
),
na = "NA",
)
library(readxl)
data <- read_excel("C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.xlsx",
sheet = 1,
col_types = c(
"text",
"text",
"numeric",
"numeric",
"numeric",
"numeric",
"text",
"numeric"
),
na = "NA",
)
gc()
library(readxl)
data <- read_excel("C:/Users/wimva/OneDrive/Wim van Saase/Privé/Ontwikkeling Wim/R/productive-r-workflow/input/data.xlsx",
sheet = 1,
col_types = c(
"text",
"text",
"numeric",
"numeric",
"numeric",
"numeric",
"text",
"numeric"
),
na = "NA",
)
summary(data)
unique(data$species)
unique(data$island)
unique(data$sex)
unique(data$year)
data %>% count(island,sort=TRUE)
library(tidyverse)
library(styler)
unique(data$species)
unique(data$island)
unique(data$sex)
unique(data$year)
data %>% count(island,sort=TRUE)
data %>% count(species,sort=TRUE)
data %>% count(year)
data %>% count(species,year)
data %>% count(island,species,sort=TRUE)
data %>% count(species,island,sort=TRUE)
data %>% count(island,year,species)
calc_mean_bill_Adelie_per_Island <- function(island_name) {
filtered_data <- subset(na.omit(data), species == "Adelie" & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
calc_mean_bill_Adelie_per_Island <- function(island_name) {
filtered_data <- subset(na.omit(data), species == "Adelie" & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
}
calc_mean_bill_Adelie_per_Island <- function(island_name) {
filtered_data <- subset(na.omit(data), species == "Adelie" & island == island_name)
mean_bill_length <- mean(filtered_data$bill_length_mm)
return(round(mean_bill_length, 2))
}
calc_mean_bill_Adelie_per_Island("Torgersen")
